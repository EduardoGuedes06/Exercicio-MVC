@model NewCentury.ViewModels.Dash.DashViewModel
@{
    ViewData["Title"] = "Dashboard";
}


<link href="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.18.3/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.18.3/extensions/filter-control/utils.min.js"></script>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<div class="text-center">
    <div class="container mt-5">
        <h2>Bem-vindo ao Painel de Controle</h2>
        <p>Aqui você pode acessar diferentes recursos de Dashboarding.</p>
    </div>
</div>
<style>
    .bootstrap-table .fixed-table-container .table.table-sm .th-inner {
        padding: 0.6rem !important;
    }

    .form-control {
        height: 40px !important
    }
</style>


<div class="container mt-10">
    <form asp-action="HistoricoTentativas" asp-controller="Dash" method="post" onsubmit="return validarDatas()" class="text-center">
        <div class="row mt-10">
            <div class="col-md-12 text-center">
                <div class="row">
                    <div class="col-md-6">
                        <label for="dataInicial">Data Inicial:</label>
                        <input type="date" class="form-control mx-auto mt-2" id="dataInicial" name="DataInicial" value="@Model.DataInicial.ToString("yyyy-MM-dd")" onchange="validarDataInicial()">
                    </div>
                    <div class="col-md-6">
                        <label for="dataFinal">Data Final:</label>
                        <input type="date" class="form-control mx-auto mt-2" id="dataFinal" name="DataFinal" value="@Model.DataFinal.ToString("yyyy-MM-dd")" onchange="validarDataFinal()">
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col">
                <button type="submit" class="btn btn-dark mb-3">
                    <i class="fas fa-search"></i> Filtrar
                </button>
            </div>

        </div>
    </form>
</div>

<div class="row">
    <br /><br />
    </div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">

                    <div class="row rowHeader">
                            <div class="text-center">
                                <h4>Histórico de Tentativas</h4>
                            </div>
                            <div class="table table-sm" style="max-height: 1200px;">
                                <table id="table"
                                       data-toggle="table"
                                       
                                       data-filter-control="true"
                                       class="table table-hover table-striped"
                                       data-height="500">
                                    <thead class="table-light">
                                        <tr>
                                            <th class="col-sm-1 text-center" data-field="PartidaID" data-filter-control="input" data-sortable="true">Partida ID</th>
                                            <th class="col-sm-1 text-center" data-field="Jogador" data-filter-control="input" data-sortable="true">Nome</th>
                                            <th class="col-sm-1 text-center" data-field="EscolhaMaquina" data-filter-control="input" data-sortable="true">Máquina</th>
                                            <th class="col-sm-1 text-center" data-field="EscolhaJogador" data-filter-control="input" data-sortable="true">Jogador</th>
                                            <th class="col-sm-1 text-center" data-field="DataJogada" data-filter-control="input" data-sortable="true">Data da jogada</th>
                                        <th class="col-sm-1 text-center" data-field="Dificuldade" data-filter-control="select" data-sortable="true">Dificuldade</th>
                                        <th class="col-sm-1 text-center" data-field="Resultado" data-filter-control="select" data-sortable="true">Resultado</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tentativasTableBody">
                                        @foreach (var item in Model.Tentativas)
                                        {
                                           <tr>
                                                <td>
                                                    @{
                                                        string partidaId = item.PartidaId.ToString();
                                                        string partidaIdAbreviado = partidaId.Length > 7 ? partidaId.Substring(0, 13) + "..." : partidaId;
                                                    }

                                                    @Html.DisplayFor(modelItem => partidaIdAbreviado)
                                                </td>
                                                <td>

                                                    @{
                                                        string nome = item.Partida.Jogador.Nome.ToString() + ".";
                                                    }
                                                    @Html.DisplayFor(modelItem => nome)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.EscolhaMaquina)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.EscolhaJogador)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.DataCadastro)
                                                </td>
                                                <td>
                                                    @{
                                                        string dificuldade = item.Partida.Dificuldade.ToString().ToUpper();
                                                    }

                                                    @Html.DisplayFor(modelItem => dificuldade)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Resultado)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                    </div>
                    <div class="row">
                        <br /><br />
                        <br /><br />
                    </div>
                    <div class="row">
                        <div class="col-4 justify-content-around text-center">
                            <h4>Gráfico de Vitória e Derrota</h4>

                            <div id="chart_1"></div>
                        </div>
                        <div class="col-4 justify-content-around text-center">
                            <h4>Rodadas jogadas por dia</h4>
                            <div id="chart_3"></div>
                        </div>
                        <div class="col-4 justify-content-around text-center">
                            <h4>Média de Dificuldades</h4>
                            <div id="chart_2"></div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
    <style>
        #chart_1 div, #chart_2 div{
            margin:auto
        }
    </style>

</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/paginationjs/2.1.5/pagination.min.js"></script>


@section Scripts {

    <script>
        $(document).ready(function () {
            calcularInformacoesTempoReal();
            var observer = new MutationObserver(function (mutations) {
                calcularInformacoesTempoReal();
            });
            var observerOptions = {
                childList: true,
                subtree: true
            };
            observer.observe(document.getElementById('tentativasTableBody'), observerOptions);
        });

        function calcularInformacoesTempoReal() {
            var totalSuccess = 0;
            var totalWrong = 0;
            var totalFacil = 0;
            var totalMedio = 0;
            var totalDificil = 0;
            var dadosPorDia = {};
            var datasUnicas = new Set();
            $('#tentativasTableBody tr').each(function () {
                var resultado = $(this).find('td:nth-child(7)').text();
                var dificuldade = $(this).find('td:nth-child(6)').text();

                var dataCompleta = $(this).find('td:nth-child(5)').text();
                var data = dataCompleta.substring(0, 10);

                if (!dadosPorDia[data]) {
                    dadosPorDia[data] = {
                        acertos: 0,
                        erros: 0
                    };
                }

                if (resultado === 'SUCCESS') {
                    dadosPorDia[data].acertos++;
                    totalSuccess++;
                } else if (resultado === 'WRONG') {
                    dadosPorDia[data].erros++;
                    totalWrong++;
                }

                if (dificuldade === 'FACIL') {
                    totalFacil++;
                } else if (dificuldade === 'MEDIO') {
                    totalMedio++;
                } else if (dificuldade === 'DIFICIL') {
                    totalDificil++;
                }
            });

            var dadosFormatados = Object.keys(dadosPorDia).sort().map(function (data) {
                return { x: formatarData(data), y: [dadosPorDia[data].acertos, dadosPorDia[data].erros] };
            });

            var dadosAcertos = dadosFormatados.map(function (item) {
                return { x: item.x, y: item.y[0] };
            });

            var dadosErros = dadosFormatados.map(function (item) {
                return { x: item.x, y: item.y[1] };
            });

            chart.updateSeries([{ name: 'Acertos', data: dadosAcertos }, { name: 'Erros', data: dadosErros }]);



            chartDificuldades.updateSeries([totalFacil, totalMedio, totalDificil]);
            chartResultado.updateSeries([totalSuccess, totalWrong]);
        }

        function formatarData(data) {
            var dataObj = new Date(data);
            var dia = dataObj.getDate();
            var mes = dataObj.getMonth() + 1;
            var ano = dataObj.getFullYear();
            return (dia < 10 ? '0' : '') + dia + '/' + (mes < 10 ? '0' : '') + mes + '/' + ano + ' GMT';
        }

    </script>

    @*  Grafico Esquerda *@
    <script>
        var options = {
            series: [0, 0],
            chart: {
                width: 320,
                type: 'pie',
            },
            labels: ['Vitória', 'Derrota'],
            colors: ['#2ecc71', '#e74c3c'],
            legend: {
                position: 'bottom',
                horizontalAlign: 'center'
            },
            plotOptions: {
                pie: {
                    dataLabels: {
                        style: {
                            fontSize: '14px',
                            fontWeight: 600
                        }
                    }
                }
            },
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200
                    }
                }
            }]
        };

        var chartResultado = new ApexCharts(document.querySelector("#chart_1"), options);
        chartResultado.render();
    </script>

    @*  Grafico Direita *@
    <script>
        var optionsDificuldades = {
            series: [0, 0, 0],
            chart: {
                width: 320,
                type: 'pie',
            },
            labels: ['Fácil', 'Médio', 'Difícil'],
            colors: ['#2ecc71', '#3498db', '#e74c3c'],
            legend: {
                position: 'bottom',
                horizontalAlign: 'center'
            },
            plotOptions: {
                pie: {
                    dataLabels: {
                        style: {
                            fontSize: '14px',
                            fontWeight: 600
                        }
                    }
                }
            },
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200
                    }
                }
            }]
        };

        var chartDificuldades = new ApexCharts(document.querySelector("#chart_2"), optionsDificuldades);
        chartDificuldades.render();
    </script>

    @*  Grafico Meio *@
    <script>
        var options = {
            series: [{
                name: 'Acertos',
                data: []
            }, {
                name: 'Erros',
                data: []
            }],
            chart: {
                type: 'bar',
                with: 300,
                stacked: true,
                toolbar: {
                    show: true
                },
                zoom: {
                    enabled: true
                }
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    borderRadius: 10,
                    dataLabels: {
                        total: {
                            enabled: true,
                            style: {
                                fontSize: '13px',
                                fontWeight: 900
                            }
                        }
                    }
                }
            },
            xaxis: {
                type: 'datetime',
                categories: [],
            },
            legend: {
                position: 'right',
                offsetY: 40
            },
            fill: {
                opacity: 1
            }
        };

        var chart = new ApexCharts(document.querySelector("#chart_3"), options);
        chart.render();
    </script>

    @*  Filtragem Data *@
    <script>
        function validarDatas() {
            var dataInicial = document.getElementById("dataInicial").value;
            var dataFinal = document.getElementById("dataFinal").value;
            var dataAtual = new Date().toISOString().split('T')[0];

            if (dataInicial > dataFinal) {
                alert("A data inicial deve ser menor ou igual à data final.");
                return false;
            }

            if (dataInicial > dataAtual || dataFinal > dataAtual) {
                alert("As datas não podem ser maiores que a data atual.");
                return false;
            }

            return true;
        }

        function validarDataInicial() {
            var dataInicial = document.getElementById("dataInicial").value;
            var dataFinal = document.getElementById("dataFinal").value;

            if (dataInicial > dataFinal) {
                document.getElementById("dataInicial").value = new Date().toISOString().split('T')[0];
            }
        }

        function validarDataFinal() {
            var dataInicial = document.getElementById("dataInicial").value;
            var dataFinal = document.getElementById("dataFinal").value;

            if (dataInicial > dataFinal) {
                document.getElementById("dataFinal").value = new Date().toISOString().split('T')[0];
            }
        }
    </script>
}
